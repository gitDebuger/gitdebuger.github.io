import{_ as o,c as l,a as s,b as a,d as t,e as p,o as i,r}from"./app-DlLt4BHG.js";const c={},u={href:"https://gitee.com/openharmony-sig/arkanalyzer",target:"_blank",rel:"noopener noreferrer"},d={href:"https://neo4j.com/download/",target:"_blank",rel:"noopener noreferrer"};function k(v,n){const e=r("ExternalLinkIcon");return i(),l("div",null,[n[6]||(n[6]=s("h1",{id:"neo4j",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#neo4j"},[s("span",null,"Neo4j")])],-1)),n[7]||(n[7]=s("p",null,"Neo4j is a graph database. We will use it to store CG (Call Graph) and CFG (Control Flow Graph) generated by ArkAnalyzer.",-1)),s("p",null,[n[1]||(n[1]=a("We will develop an extension called Ark2Graph for ")),s("a",u,[n[0]||(n[0]=a("ArkAnalyzer")),t(e)]),n[2]||(n[2]=a(", and steps are as follows:"))]),n[8]||(n[8]=s("ol",null,[s("li",null,"Get CG and CFG from ArkAnalyzer."),s("li",null,"Travel the CG and CFG."),s("li",null,"Save the results into Neo4j.")],-1)),n[9]||(n[9]=s("p",null,"So it is essential to deploy a Neo4j server in the computer where we develop this extension.",-1)),n[10]||(n[10]=s("h2",{id:"_1-download-and-run-neo4j-server",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-download-and-run-neo4j-server"},[s("span",null,"1. Download and Run Neo4j Server")])],-1)),s("p",null,[n[4]||(n[4]=a("First, we can download an installer from ")),s("a",d,[n[3]||(n[3]=a("here")),t(e)]),n[5]||(n[5]=a("."))]),n[11]||(n[11]=p(`<p>Before downloading, we need to fill the form about our personal information, and then this website will display an activation key. We need to copy this key and save it into a local file.</p><p>After downloading is OK, we can run this installer to install Neo4j. Choose where we want to install this application and where we want to save data, and then the server will run automatically. Then the window of Neo4j Desktop will be open, where we can view status of this server and manage this server.</p><blockquote><p>Don&#39;t close the window of command opened automatically, or there will be some errors.</p></blockquote><h2 id="_2-connect-to-neo4j-server" tabindex="-1"><a class="header-anchor" href="#_2-connect-to-neo4j-server"><span>2. Connect to Neo4j Server</span></a></h2><h3 id="_2-1-setting-username-and-password" tabindex="-1"><a class="header-anchor" href="#_2-1-setting-username-and-password"><span>2.1 Setting Username and Password</span></a></h3><p>First, we open Neo4j Browser from Neo4j Desktop, and then run Cypher in the console:</p><div class="language-cypher line-numbers-mode" data-highlighter="prismjs" data-ext="cypher" data-title="cypher"><pre class="language-cypher"><code><span class="line">ALTER USER neo4j <span class="token keyword">SET</span> PASSWORD <span class="token string">&#39;neo4j123&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command will change the password of user neo4j.</p><p>Or we can create a new user and grant admin privilege to it:</p><div class="language-cypher line-numbers-mode" data-highlighter="prismjs" data-ext="cypher" data-title="cypher"><pre class="language-cypher"><code><span class="line"><span class="token keyword">CREATE</span> USER new_user <span class="token keyword">SET</span> PASSWORD <span class="token string">&#39;new_password&#39;</span> CHANGE <span class="token keyword">NOT</span> REQUIRED<span class="token punctuation">;</span></span>
<span class="line">GRANT ROLE admin TO new_user<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Then we can use this user and password to visit http://localhost:7474 using our browser or use terminal to connect to <code>neo4j://localhost:7687</code> to connect to Neo4j server.</p><h3 id="_2-2-connect-to-neo4j-server-in-ts" tabindex="-1"><a class="header-anchor" href="#_2-2-connect-to-neo4j-server-in-ts"><span>2.2 Connect to Neo4j Server in TS</span></a></h3><p>First we need to install the driver of Neo4j:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> neo4j-driver</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then we need to edit the configuration of the Neo4j server:</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="line"><span class="token comment"># Use 0.0.0.0 to bind to all network interfaces on the machine</span></span>
<span class="line"><span class="token key attr-name">server.default_listen_address</span><span class="token punctuation">=</span><span class="token value attr-value">0.0.0.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Then we can create a TypeScript file to test this connection:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> neo4j <span class="token keyword">from</span> <span class="token string">&quot;neo4j-driver&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// You need to change it into where your Neo4j server is running</span></span>
<span class="line"><span class="token keyword">let</span> uri <span class="token operator">=</span> <span class="token string">&quot;bolt://172.18.48.1:7687&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> username <span class="token operator">=</span> <span class="token string">&quot;neo4j&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> password <span class="token operator">=</span> <span class="token string">&quot;neo4j123&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> driver <span class="token operator">=</span> neo4j<span class="token punctuation">.</span><span class="token function">driver</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> neo4j<span class="token punctuation">.</span>auth<span class="token punctuation">.</span><span class="token function">basic</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> session <span class="token operator">=</span> driver<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> session<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;CREATE (n:Person {name: $name, age: $age}) RETURN n&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Neo4j&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>records<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error creating node:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">await</span> session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">createNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    driver<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run this file and then we can see the output:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">Node {</span>
<span class="line">  identity: Integer { low: 169, high: 0 },</span>
<span class="line">  labels: [ &#39;Person&#39; ],</span>
<span class="line">  properties: { name: &#39;Neo4j&#39;, age: 20 },</span>
<span class="line">  elementId: &#39;4:e920355b-215c-4a27-aaab-8d40cf5dfa18:169&#39;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-neo4j-modules" tabindex="-1"><a class="header-anchor" href="#_3-neo4j-modules"><span>3. Neo4j Modules</span></a></h2><p>Neo4j graph database consists of following modules:</p><ul><li>Node</li><li>Attribute</li><li>Relation</li><li>Label</li><li>Data Browser</li></ul><h3 id="_3-1-node" tabindex="-1"><a class="header-anchor" href="#_3-1-node"><span>3.1 Node</span></a></h3><p>Node is the base unit of graph, which contains attributes with key-value.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">EmployeeNode <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">EmpName</span><span class="token operator">:</span> <span class="token string">&quot;Neo4j&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">EmpNumber</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">Salary</span><span class="token operator">:</span> <span class="token string">&quot;3500&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>At this example, the name of this node is <code>EmployeeNode</code> .</p><h3 id="_3-2-attribute" tabindex="-1"><a class="header-anchor" href="#_3-2-attribute"><span>3.2 Attribute</span></a></h3><p>Attribute is Key-Value used to depict graph nodes and relations.</p><p>Key is a string and Value can be any type of Neo4j.</p><h3 id="_3-3-relation" tabindex="-1"><a class="header-anchor" href="#_3-3-relation"><span>3.3 Relation</span></a></h3><p>Relation connects two nodes, and each relation contains a starting node and an ending node.</p><p>Just like attribute, relation can also contain key-value attributes.</p><h3 id="_3-4-label" tabindex="-1"><a class="header-anchor" href="#_3-4-label"><span>3.4 Label</span></a></h3><p>Label associate a public name with a group of nodes or relations, and each node or relation can contain one or more labels.</p><p>We can create a new label for nodes or relations, and we can remove labels from nodes or relations.</p><h3 id="_3-5-data-browser" tabindex="-1"><a class="header-anchor" href="#_3-5-data-browser"><span>3.5 Data Browser</span></a></h3><p>Data Browser is a GUI used to run cypher command and view the output, and we can use it to export the output.</p>`,38))])}const m=o(c,[["render",k],["__file","Neo4j.html.vue"]]),b=JSON.parse('{"path":"/blogs/ArkAnalyzer/Neo4j.html","title":"Neo4j","lang":"en-US","frontmatter":{"categories":["ArkAnalyzer"]},"headers":[{"level":2,"title":"1. Download and Run Neo4j Server","slug":"_1-download-and-run-neo4j-server","link":"#_1-download-and-run-neo4j-server","children":[]},{"level":2,"title":"2. Connect to Neo4j Server","slug":"_2-connect-to-neo4j-server","link":"#_2-connect-to-neo4j-server","children":[{"level":3,"title":"2.1 Setting Username and Password","slug":"_2-1-setting-username-and-password","link":"#_2-1-setting-username-and-password","children":[]},{"level":3,"title":"2.2 Connect to Neo4j Server in TS","slug":"_2-2-connect-to-neo4j-server-in-ts","link":"#_2-2-connect-to-neo4j-server-in-ts","children":[]}]},{"level":2,"title":"3. Neo4j Modules","slug":"_3-neo4j-modules","link":"#_3-neo4j-modules","children":[{"level":3,"title":"3.1 Node","slug":"_3-1-node","link":"#_3-1-node","children":[]},{"level":3,"title":"3.2 Attribute","slug":"_3-2-attribute","link":"#_3-2-attribute","children":[]},{"level":3,"title":"3.3 Relation","slug":"_3-3-relation","link":"#_3-3-relation","children":[]},{"level":3,"title":"3.4 Label","slug":"_3-4-label","link":"#_3-4-label","children":[]},{"level":3,"title":"3.5 Data Browser","slug":"_3-5-data-browser","link":"#_3-5-data-browser","children":[]}]}],"git":{"createdTime":1727442951000,"updatedTime":1727442951000,"contributors":[{"name":"gitDebuger","email":"hygchn04@gmail.com","commits":1}]},"filePathRelative":"blogs/ArkAnalyzer/Neo4j.md"}');export{m as comp,b as data};
